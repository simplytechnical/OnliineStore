{
	"Auth": "Auth",
	"ltr": "ltr",
	"Online Store": "Online Store",
	"login": "login",
	"Username": "Username",
	"Password": "Password",
	"Repeat Password": "Repeat Password",
	"language": "language",
	"Register": "Register",
	"create": "create",
	"enter": "enter",
	"matching": "matching",
	"not matching": "not matching",
	"email": "email",
	"Email used by another user": "Email used by another user",
	"Back to auth page": "Back to auth page",
	"User isn't authenticated": "User isn't authenticated",
	"you will login with your facebook account": "you will login with your facebook account",
	"You will login with your facebook account": "You will login with your facebook account",
	"You will login with your instagram account": "You will login with your instagram account",
	"You will login with your twitter account": "You will login with your twitter account",
	"You will login with your google account": "You will login with your google account",
	"You will login with your github account": "You will login with your github account",
	"The code passed is incorrect or expired.": "The code passed is incorrect or expired.",
	"Your email should be public !": "Your email should be public !",
	"Not Found": "Not Found",
	"Cannot set headers after they are sent to the client": "Cannot set headers after they are sent to the client",
	"The request has an invalid grant parameter : code": "The request has an invalid grant parameter : code",
	"\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    githubId: NaN,\n              ~~~\n    password: '$2b$10$9Ew1dpPhza3630lfJsfr7ec2GhtV9ENdXrDcmvIUSPE12FDbhCDgG',\n    active: true\n  }\n}\n\nArgument githubId: Got invalid value NaN on prisma.createOneUser. Provided Float, expected Int.\n\n": "\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    githubId: NaN,\n              ~~~\n    password: '$2b$10$9Ew1dpPhza3630lfJsfr7ec2GhtV9ENdXrDcmvIUSPE12FDbhCDgG',\n    active: true\n  }\n}\n\nArgument githubId: Got invalid value NaN on prisma.createOneUser. Provided Float, expected Int.\n\n",
	"\n\u001b[31mInvalid \u001b[1m`prisma.user.findOne()`\u001b[22m invocation in\u001b[39m\n\u001b[31m\u001b[4mC:\\Users\\AhmedMKazim\\Desktop\\m\\company\\node_modules\\passport-oauth2\\lib\\strategy.js:202:24\u001b[24m\u001b[39m\n\n\n  Failed to validate the query `Error occurred during query validation & transformation:\nQuery (object)\n  ↳ findOneUser (field)\n    ↳ User (object)\n      ↳ instagramId (field)\n        ↳ Field does not exist on enclosing type.` at `.Query.findOneUser.User.instagramId`": "\n\u001b[31mInvalid \u001b[1m`prisma.user.findOne()`\u001b[22m invocation in\u001b[39m\n\u001b[31m\u001b[4mC:\\Users\\AhmedMKazim\\Desktop\\m\\company\\node_modules\\passport-oauth2\\lib\\strategy.js:202:24\u001b[24m\u001b[39m\n\n\n  Failed to validate the query `Error occurred during query validation & transformation:\nQuery (object)\n  ↳ findOneUser (field)\n    ↳ User (object)\n      ↳ instagramId (field)\n        ↳ Field does not exist on enclosing type.` at `.Query.findOneUser.User.instagramId`",
	"\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: NaN,\n              ~~~\n    password: '$2b$10$cGX5kFvAU49YhohBE/v3Hute6YLsN9cjb.mUtSV6PSxrhCUpCuvb2',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value NaN on prisma.createOneUser. Provided Float, expected Int.\n\n": "\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: NaN,\n              ~~~\n    password: '$2b$10$cGX5kFvAU49YhohBE/v3Hute6YLsN9cjb.mUtSV6PSxrhCUpCuvb2',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value NaN on prisma.createOneUser. Provided Float, expected Int.\n\n",
	"\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: NaN,\n              ~~~\n    password: '$2b$10$hbNX5.etD0TkOsB3isZcR.xhwi7UR5seut0MfDkQ9AgAX.pz2Q/IS',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value NaN on prisma.createOneUser. Provided Float, expected Int.\n\n": "\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: NaN,\n              ~~~\n    password: '$2b$10$hbNX5.etD0TkOsB3isZcR.xhwi7UR5seut0MfDkQ9AgAX.pz2Q/IS',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value NaN on prisma.createOneUser. Provided Float, expected Int.\n\n",
	"\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA',\n              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    password: '$2b$10$ml2p0nf.t6DowxrJjGXbH.Vj0EXJvTCBQLg1PIoDyg97tpiSyEU.y',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA' on prisma.createOneUser. Provided String, expected Int.\n\n": "\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA',\n              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    password: '$2b$10$ml2p0nf.t6DowxrJjGXbH.Vj0EXJvTCBQLg1PIoDyg97tpiSyEU.y',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA' on prisma.createOneUser. Provided String, expected Int.\n\n",
	"\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA',\n              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    password: '$2b$10$Ks7LoV9leM8zj.TkkX8LpOj9OeoQR9889ac2DSqmifglH7ujUkJ8K',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA' on prisma.createOneUser. Provided String, expected Int.\n\n": "\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    email: 'alasady96ahmed@gmail.com',\n    amazonId: 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA',\n              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    password: '$2b$10$Ks7LoV9leM8zj.TkkX8LpOj9OeoQR9889ac2DSqmifglH7ujUkJ8K',\n    active: true\n  }\n}\n\nArgument amazonId: Got invalid value 'amzn1.account.AFBRR5SFC7ZSZPCNL3ZQED765PJA' on prisma.createOneUser. Provided String, expected Int.\n\n",
	"You will login with your amazon account": "You will login with your amazon account",
	"\n\u001b[31mInvalid \u001b[1m`prisma.user.findOne()`\u001b[22m invocation in\u001b[39m\n\u001b[31m\u001b[4mC:\\Users\\AhmedMKazim\\Desktop\\m\\company\\node_modules\\passport-oauth2\\lib\\strategy.js:202:24\u001b[24m\u001b[39m\n\n\n  Error occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: \"ERROR\", parsed_severity: Some(Error), code: SqlState(\"42703\"), message: \"column User.googleId does not exist\", detail: None, hint: None, position: Some(Original(109)), where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"d:\\\\pginstaller_12.auto\\\\postgres.windows-x64\\\\src\\\\backend\\\\parser\\\\parse_relation.c\"), line: Some(3359), routine: Some(\"errorMissingColumn\") }) }) })": "\n\u001b[31mInvalid \u001b[1m`prisma.user.findOne()`\u001b[22m invocation in\u001b[39m\n\u001b[31m\u001b[4mC:\\Users\\AhmedMKazim\\Desktop\\m\\company\\node_modules\\passport-oauth2\\lib\\strategy.js:202:24\u001b[24m\u001b[39m\n\n\n  Error occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: \"ERROR\", parsed_severity: Some(Error), code: SqlState(\"42703\"), message: \"column User.googleId does not exist\", detail: None, hint: None, position: Some(Original(109)), where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"d:\\\\pginstaller_12.auto\\\\postgres.windows-x64\\\\src\\\\backend\\\\parser\\\\parse_relation.c\"), line: Some(3359), routine: Some(\"errorMissingColumn\") }) }) })",
	"The redirect_uri MUST match the registered callback URL for this application.": "The redirect_uri MUST match the registered callback URL for this application.",
	"C:\\Users\\AhmedMKazim\\Desktop\\m\\company\\views\\index.ejs:9\n    7|   <body>\n    8|       <table>\n >> 9|           <% for(var i=0; i < allUsers.length; i++) { %>\n    10|              <tr>\n    11|                <td><%= allUsers[i].id %></td>\n    12|                <td><%= allUsers[i].email %></td>\n\nallUsers is not defined": "C:\\Users\\AhmedMKazim\\Desktop\\m\\company\\views\\index.ejs:9\n    7|   <body>\n    8|       <table>\n >> 9|           <% for(var i=0; i < allUsers.length; i++) { %>\n    10|              <tr>\n    11|                <td><%= allUsers[i].id %></td>\n    12|                <td><%= allUsers[i].email %></td>\n\nallUsers is not defined",
	"Desktop applications only support the oauth_callback value 'oob'": "Desktop applications only support the oauth_callback value 'oob'",
	"You do't have email": "You do't have email",
	"Failed to find request token in session": "Failed to find request token in session"
}